{"name":"Sinatra-linkeddata","tagline":"Sinatra extension for Linked Data content negotiation.","body":"# Linked Data Content Negotiation for Sinatra Applications\r\n\r\nThis is a [Sinatra][] extension that provides [Linked Data][] content\r\nnegotiation for Sinatra applications.\r\n\r\n* <http://github.com/datagraph/sinatra-linkeddata>\r\n\r\n[![Gem Version](https://badge.fury.io/rb/sinatra-linkeddata.png)](http://badge.fury.io/rb/sinatra-linkeddata)\r\n[![Build Status](https://travis-ci.org/ruby-rdf/sinatra-linkeddata.png?branch=master)](http://travis-ci.org/ruby-rdf/sinatra-linkeddata)\r\n\r\n## Features\r\n\r\n* Implements [HTTP content negotiation][conneg] for RDF content types using\r\n  the [`Rack::LinkedData`][Rack::LinkedData] middleware.\r\n* Supports all [RDF.rb][]-compatible serialization formats.\r\n* Supports both classic and modular Sinatra applications.\r\n\r\n## Examples\r\n\r\n### Adding Linked Data content negotiation to a classic Sinatra application\r\n\r\n    #!/usr/bin/env ruby -rubygems\r\n    require 'sinatra'\r\n    require 'sinatra/linkeddata'\r\n    \r\n    get '/hello' do\r\n      RDF::Graph.new do |graph|\r\n        graph << [RDF::Node.new, RDF::DC.title, \"Hello, world!\"]\r\n      end\r\n    end\r\n\r\n### Adding Linked Data content negotiation to a modular Sinatra application\r\n\r\n    #!/usr/bin/env ruby -rubygems\r\n    require 'sinatra/base'\r\n    require 'sinatra/linkeddata'\r\n    \r\n    module My\r\n      class Application < Sinatra::Base\r\n        register Sinatra::LinkedData\r\n    \r\n        get '/hello' do\r\n          RDF::Graph.new do |graph|\r\n            graph << [RDF::Node.new, RDF::DC.title, \"Hello, world!\"]\r\n          end\r\n        end\r\n      end\r\n    end\r\n    \r\n    My::Application.run! :host => '127.0.0.1', :port => 4567\r\n\r\n### Adding Linked Data content negotiation to a Rackup application\r\n\r\n    #!/usr/bin/env rackup\r\n    require 'sinatra/base'\r\n    require 'sinatra/linkeddata'\r\n    \r\n    module My\r\n      class Application < Sinatra::Base\r\n        register Sinatra::LinkedData\r\n    \r\n        get '/hello' do\r\n          RDF::Graph.new do |graph|\r\n            graph << [RDF::Node.new, RDF::DC.title, \"Hello, world!\"]\r\n          end\r\n        end\r\n      end\r\n    end\r\n    \r\n    run My::Application\r\n\r\n### Testing Linked Data content negotiation using `rackup` and `curl`\r\n\r\n    $ rackup doc/examples/config.ru\r\n    \r\n    $ curl -iH \"Accept: application/n-triples\" http://localhost:9292/hello\r\n    $ curl -iH \"Accept: application/turtle\" http://localhost:9292/hello\r\n    $ curl -iH \"Accept: application/rdf+xml\" http://localhost:9292/hello\r\n    $ curl -iH \"Accept: application/json\" http://localhost:9292/hello\r\n    $ curl -iH \"Accept: application/trix\" http://localhost:9292/hello\r\n    $ curl -iH \"Accept: */*\" http://localhost:9292/hello\r\n\r\n## Description\r\n\r\n`Sinatra::LinkedData` is a thin Sinatra-specific wrapper around the\r\n[`Rack::LinkedData`][Rack::LinkedData] middleware, which implements Linked\r\nData content negotiation for Rack applications.\r\n\r\nAt the moment the Sinatra extension simply corresponds\r\nto doing the following manually in a Sinatra application:\r\n\r\n    require 'rack/linkeddata'\r\n    \r\n    module My\r\n      class Application < Sinatra::Base\r\n        use     Rack::LinkedData::ContentNegotiation\r\n        helpers Sinatra::LinkedData::Helpers\r\n        include RDF\r\n        include LinkedData\r\n      end\r\n    end\r\n\r\nSee the `Rack::LinkedData` documentation for more information on the\r\noperation and details of the content negotiation.\r\n\r\n## Documentation\r\n\r\n<http://rubydoc.info/github/ruby-rdf/sinatra-linkeddata/>\r\n\r\n* {Sinatra::LinkedData}\r\n\r\n## Dependencies\r\n\r\n* [Sinatra](http://rubygems.org/gems/sinatra) (>= 1.4.4)\r\n* [Rack::LinkedData](http://rubygems.org/gems/rack-linkeddata) (>= 1.1.0)\r\n\r\n## Installation\r\n\r\nThe recommended installation method is via [RubyGems](http://rubygems.org/).\r\nTo install the latest official release of the gem, do:\r\n\r\n    % [sudo] gem install sinatra-linkeddata\r\n\r\n## Download\r\n\r\nTo get a local working copy of the development repository, do:\r\n\r\n    % git clone git://github.com/ruby-rdf/sinatra-linkeddata.git\r\n\r\nAlternatively, you can download the latest development version as a tarball\r\nas follows:\r\n\r\n    % wget http://github.com/ruby-rdf/sinatra-linkeddata/tarball/master\r\n\r\n##Contributing\r\nThis repository uses [Git Flow](https://github.com/nvie/gitflow) to mange development and release activity. All submissions _must_ be on a feature branch based on the _develop_ branch to ease staging and integration.\r\n\r\n* Do your best to adhere to the existing coding conventions and idioms.\r\n* Don't use hard tabs, and don't leave trailing whitespace on any line.\r\n* Do document every method you add using [YARD][] annotations. Read the\r\n  [tutorial][YARD-GS] or just look at the existing code for examples.\r\n* Don't touch the `.gemspec`, `VERSION` or `AUTHORS` files. If you need to\r\n  change them, do so on your private branch only.\r\n* Do feel free to add yourself to the `CREDITS` file and the corresponding\r\n  list in the the `README`. Alphabetical order applies.\r\n* Do note that in order for us to merge any non-trivial changes (as a rule\r\n  of thumb, additions larger than about 15 lines of code), we need an\r\n  explicit [public domain dedication][PDD] on record from you.\r\n\r\n## References\r\n\r\n* <http://www.w3.org/DesignIssues/LinkedData.html>\r\n* <http://linkeddata.org/docs/how-to-publish>\r\n* <http://linkeddata.org/conneg-303-redirect-code-samples>\r\n* <http://www.w3.org/TR/cooluris/>\r\n* <http://www.w3.org/TR/swbp-vocab-pub/>\r\n* <http://patterns.dataincubator.org/book/publishing-patterns.html>\r\n\r\n## Authors\r\n\r\n* [Arto Bendiken](http://github.com/bendiken) - <http://ar.to/>\r\n* [Gregg Kellogg](http://github.com/gkellogg) - <http://greggkellogg.net/>\r\n\r\n## Contributing\r\nThis repository uses [Git Flow](https://github.com/nvie/gitflow) to mange development and release activity. All submissions _must_ be on a feature branch based on the _develop_ branch to ease staging and integration.\r\n\r\n* Do your best to adhere to the existing coding conventions and idioms.\r\n* Don't use hard tabs, and don't leave trailing whitespace on any line.\r\n* Do document every method you add using [YARD][] annotations. Read the\r\n  [tutorial][YARD-GS] or just look at the existing code for examples.\r\n* Don't touch the `.gemspec`, `VERSION` or `AUTHORS` files. If you need to\r\n  change them, do so on your private branch only.\r\n* Do feel free to add yourself to the `CREDITS` file and the corresponding\r\n  list in the the `README`. Alphabetical order applies.\r\n* Do note that in order for us to merge any non-trivial changes (as a rule\r\n  of thumb, additions larger than about 15 lines of code), we need an\r\n  explicit [public domain dedication][PDD] on record from you.\r\n\r\n## License\r\n\r\n`Sinatra::LinkedData` is free and unencumbered public domain software. For more\r\ninformation, see <http://unlicense.org/> or the accompanying UNLICENSE file.\r\n\r\n[Sinatra]:          http://www.sinatrarb.com/\r\n[Rack]:             http://rack.github.com/\r\n[RDF.rb]:           http://ruby-rdf.github.com/rdf/\r\n[Rack::LinkedData]: http://datagraph.rubyforge.org/rack-linkeddata/\r\n[Linked Data]:      http://linkeddata.org/\r\n[conneg]:           http://en.wikipedia.org/wiki/Content_negotiation\r\n[YARD]:            http://yardoc.org/\r\n[YARD-GS]:         http://rubydoc.info/docs/yard/file/docs/GettingStarted.md\r\n[PDD]:             http://unlicense.org/#unlicensing-contributions\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}